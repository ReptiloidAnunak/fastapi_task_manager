services:
  tasks_db:
    container_name: tasks_db
    image: postgres
    restart: always
    environment:
        POSTGRES_DB: ${DB_NAME}
        POSTGRES_USER: ${DB_USER}
        POSTGRES_PASSWORD: ${DB_PASSWORD}
    env_file:
      - .env
    volumes:
      - data_base:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  tasks_api:
    depends_on:
      tasks_db:
        condition: service_healthy
    container_name: tasks_api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8000:8000'
    volumes:
      - .:/app
      - ./logs:/app/logs
      - ./staticfiles:/app/staticfiles
    networks:
      - app-network
    env_file:
      - .env

    command: ["uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    restart: always

  tests:
    depends_on:
      tasks_db:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile.test
    volumes:
      - .:/app
    networks:
      - app-network
    env_file:
      - .env
    command: ["pytest", "-v"]
    profiles:
      - test


networks:
  app-network:
    driver: bridge


volumes:
  data_base:
